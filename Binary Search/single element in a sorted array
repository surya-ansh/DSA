class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) {

        if(nums.size() == 1) return nums[0];
       
        int start = 0, end = nums.size()-1;
  

        while(start <= end){
            int mid = (start + end)/2;

            if(mid % 2 == 0){
                if(nums[mid] != nums[mid-1] && nums[mid] != nums[mid + 1]){
                    return nums[mid];
                }
                else if(nums[mid] != nums[mid -1 ]){
                   start = mid; 
                }
                else{
                    end = mid;
                }
            }
            else{
                if(nums[start] != nums[start+1]){
                    return nums[start];
                }
                else if(nums[mid] != nums[mid -1]){
                    end = mid;
                }
                else{
                    start = mid + 1;
                }
            }

        }
        return 0;
    }
};